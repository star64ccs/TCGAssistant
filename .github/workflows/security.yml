name: Security Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # 每週一凌晨2點運行
    - cron: '0 2 * * 1'

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        
    - name: Run security audit
      run: |
        npm audit --audit-level=moderate
        cd backend && npm audit --audit-level=moderate
        
    - name: Run custom security check
      run: |
        node scripts/security-check.js
        
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: HEAD~1
        
    - name: Run ESLint security rules
      run: |
        npm run lint
        
    - name: Check for vulnerable dependencies
      run: |
        npx audit-ci --moderate
        
  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for outdated packages
      run: |
        npm outdated || true
        echo "Checking for outdated packages completed"
        
    - name: Check for unused dependencies
      run: |
        npx depcheck || true
        echo "Dependency check completed"
        
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Check code coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
